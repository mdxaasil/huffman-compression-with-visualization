/**
 * Get the max number of leaf nodes from height of the binary tree
 *
 * @param {number} treeHeight - Height of the tree (number of nodes from)
 * @return {number} - Maximum number of leaf nodes
 */
export declare function getMaxLeafNodesFromHeight(treeHeight: number): number;
/**
 * Maximum canvas width required from number of tree nodes
 *
 * @param {number} maxNodes - Maximum number of nodes
 * @return {number} - The max width required
 */
export declare function getCanvasWidthFromMaxNodeSpacing(maxNodes: number): number;
/**
 * Get the x position from given horizontal node position
 *
 * @param {number} nodes - The number of nodes from the left
 * @return {number} - The x position
 */
export declare function getXPositionFromGivenHorizontalNodePosition(nodes: number): number;
/**
 * Get canvas height from the tree height
 *
 * @param {number} treeHeight - Height of the tree (number of nodes from)
 * @return {number} - The canvas height in px
 */
export declare function getCanvasHeightFromTreeHeight(treeHeight: number): number;
/**
 * Get required and actual height and width
 *
 * @param {number} maxNodeSpacing
 * @param {number} heightOfTree
 * @param {number} maxWidth
 * @param {number} maxHeight
 * @return {{
 *  maxCanvasHeightRequired: number,
 *  maxCanvasWidthRequired:number,
 *  actualMaxHeight: number,
 *  actualMaxWidth: number
 * }}
 */
export declare function getRequiredAndActualHeightAndWidth(maxNodeSpacing: number, heightOfTree: number, maxWidth: number, maxHeight: number): {
    maxCanvasHeightRequired: number;
    maxCanvasWidthRequired: number;
    actualMaxHeight: number;
    actualMaxWidth: number;
};
